# -*- coding: utf-8 -*-
"""TSF_6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pmf79qHjKzbaKU9RSrYgA8jiVrH_PAW_
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

df = pd.read_csv("Iris (1).csv")

"""#Data Exploration and Analysis

"""

#view first 5 columns in data
df.head()

#drop id column as it will not be used in classification
df.drop('Id', axis=1, inplace =True)

df.head()

#view the data types and check for nulls
df.info()

#view some statistics for the data
df.describe()

df.Species.unique()

#split target and features
X = df.iloc[:,:-1]
y = df.iloc[:,-1]

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
encoded_data = le.fit_transform(y)

#show the csv file after encoding the last column
encoded_data

df.drop('Species',axis = 1,inplace = True)

df['Species'] = encoded_data
df.head()

#Check for imbalanced data
sizes = y.value_counts(sort = True)
colors = ["yellow","green","blue"] 
plt.pie(sizes, colors=colors, autopct='%1.1f%%', shadow=True, startangle=90,)
plt.title('Percentage of target in the dataset')
plt.show()

#show correlation between the data
plt.figure(figsize=(20,10))
sns.heatmap(df.corr(),annot= True)

df.head()

#scatter plot to show all data
fig = px.scatter(df)
fig.show()

"""#Classification Model"""

#import the Decision Tree Classifier
from sklearn.tree import DecisionTreeClassifier
clf = DecisionTreeClassifier(random_state=0,max_depth = 2)

#import train_test_split
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,random_state=42)

clf.fit(X_train,y_train)

y_predict = clf.predict(X_test)

from sklearn.metrics import accuracy_score
accuracy_score(y_predict,y_test)